version: '3'

services:
  nodejs:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    environment:
      - PORT=${PORT}
      - MONGO_URI=${MONGO_URI}
      - POSTGRESDB_USER=${POSTGRESDB_USER}
      - POSTGRESDB_ROOT_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - POSTGRESDB_DATABASE=${POSTGRESDB_DATABASE}
      - POSTGRESDB_HOST=postgres  # Utilisez le nom du service Docker
    ports:
      - '3000:3000'
    volumes:
      - ./backend:/backend
    depends_on:
      - mongo
      - postgres

  postgres:
    image: postgres:14-alpine3.14
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - POSTGRES_DB=${POSTGRESDB_DATABASE}
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data  # Corrigez le chemin du volume

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - '15432:80'
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  mongo:
    container_name: mongo
    image: mongo:latest
    restart: on-failure
    command: --port 27018
    ports:
      - '27018:27018'
    volumes:
      - ./mongo:/docker-entrypoint-initdb.d
      - mongodb-data:/data/db
      - mongodb-log:/var/log/mongodb

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - nodejs

volumes:
  db:
  pgadmin:
  mongodb-data:
    driver: local
  mongodb-log:
    driver: local
